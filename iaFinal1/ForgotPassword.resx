<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="RKLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>